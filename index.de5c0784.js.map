{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["const date = new Date();\r\nconst day = date.getDate();\r\nconst month = date.getMonth() + 1;\r\nconst year = date.getFullYear();\r\nfunction toFullDate(day, month, year) {\r\n  if(day <= 9) {\r\n    day = '0' + day;\r\n  }\r\n  if(month <= 9) {\r\n    month = '0' + month;\r\n  }\r\n  return `${day}.${month}.${year}`;\r\n}\r\nlet currentDate = document.querySelector('.date');\r\ncurrentDate.textContent = toFullDate(day, month, year);\r\n\r\nconst mainWrap = document.querySelector('.main-wrap');\r\nconst taskBtnAdd = document.querySelector('.task-btn-add');\r\nconst cardContentToDo = document.querySelector('.card-content__to-do');\r\nconst cardContentIn = document.querySelector('.card-content__in');\r\nconst cardContentDone = document.querySelector('.card-content__done');\r\nconst newTaskWrap = document.querySelector('.new-task-wrap');\r\nconst cardCloseBtn = document.querySelector('.card-close-btn');\r\nconst cancelBtn = document.querySelector('.task-btn-cancel');\r\nconst deleteAllBtn = document.querySelectorAll('.task-btn-delete-all');\r\n\r\nlet newTaskTitle = document.querySelector('.new-task-title');\r\nlet newTaskDesc = document.querySelector('.new-task-desc');\r\nlet newTaskAuthor = document.querySelector('.new-task-author');\r\n\r\nlet totalToDo = document.querySelectorAll('.score');\r\nfunction countTotal(status, arr){\r\n  totalToDo.forEach((item) => {\r\n    if(item.dataset.status == status){\r\n      item.innerHTML = arr.length;\r\n    }\r\n  });\r\n}\r\n\r\nconst toDo = [];\r\nconst inProgress = [];\r\nconst done = [];\r\n\r\nfunction clearPopUp(){\r\n  clearValue(newTaskTitle);\r\n  clearValue(newTaskDesc);\r\n  clearValue(newTaskAuthor);\r\n}\r\nfunction clearValue(elem) {\r\n  elem.value = '';\r\n}\r\n\r\nlet Task = function(title, desc, author, status, date) {\r\n  this.title = title;\r\n  this.desc = desc;\r\n  this.author = author;\r\n  this.status = status;\r\n  this.date = date;\r\n}\r\n\r\nfunction render(task, idx){\r\n  return `\r\n    <div class=\"task\" data-status=\"toDo\" id=\"${idx}\">\r\n      <div class=\"task-header\">\r\n        <span class=\"task-status\">${task.status}</span>\r\n        <p class=\"task-date\">${task.date}</p>\r\n      </div>\r\n      <div class=\"task-title\">${task.title}</div>\r\n      <div class=\"task-desc\">${task.desc}</div>\r\n      <div class=\"task-author\">${task.author}</div>\r\n      <div class=\"task-options\">\r\n        <button class=\"task-btn-move-on\" id=\"${idx}\">\r\n          <i class=\"fa-regular fa-circle-right\"></i>\r\n        </button>\r\n        <button class=\"task-btn-delete\" id=\"${idx}\">\r\n          <i class=\"fa-solid fa-trash-can\"></i>\r\n        </button>\r\n      </div>            \r\n    </div>\r\n  `  \r\n}\r\n\r\nfunction outToDo(){\r\n  cardContentToDo.innerHTML = '';\r\n  toDo.forEach((task, idx) => cardContentToDo.innerHTML += render(task, idx));\r\n}\r\nfunction outInProgress(){\r\n  cardContentIn.innerHTML = '';\r\n  inProgress.forEach((task, idx) => cardContentIn.innerHTML += render(task, idx));\r\n}\r\nfunction outDone(){\r\n  cardContentDone.innerHTML = '';\r\n  done.forEach((task, idx) => cardContentDone.innerHTML += render(task, idx));\r\n}\r\n\r\n// const isValid = function () {\r\n//   let elements = document.querySelectorAll('.valid');\r\n//   elements.forEach((item) => {\r\n//     item.addEventListener('blur', () => {\r\n//       if(!item.value){\r\n//         item.value = null;\r\n//         item.setAttribute('placeholder', 'Fill in the field!');\r\n//         item.style.borderColor = 'red';\r\n//       }\r\n//     });\r\n//     item.addEventListener('focus', () => {\r\n//       if(item.getAttribute('id') == 'title') {\r\n//         item.setAttribute('placeholder', 'Enter title for your note');\r\n//       } else if(item.getAttribute('id') == 'desc') {\r\n//         item.setAttribute('placeholder', 'Enter description for your note');\r\n//       } else if(item.getAttribute('id') == 'author') {\r\n//         item.setAttribute('placeholder', \"Enter author's name\");\r\n//       }\r\n//       item.style.borderColo = 'rgb(65, 112, 184)';\r\n//     });\r\n    \r\n//   });\r\n// }\r\nfunction isValid(elem) {\r\n  if(elem.value){\r\n    return true;\r\n  }\r\n}\r\nconst setData = (array) => {\r\n  let str = JSON.stringify(array);\r\n  localStorage.setItem(`'${array}'`, str);\r\n}\r\nconst getData = (array, out) => {\r\n  let from = localStorage.getItem(array);\r\n  let data = JSON.parse(from);\r\n  if (data) {\r\n    sortItem(data,out);\r\n  } else {\r\n    out.innerHTML = \"\";\r\n  }\r\n}\r\nconst sortItem = (data, out) => {\r\n  data.forEach((task, idx) => {\r\n    out.innerHTML += render(task, idx);\r\n  });\r\n};\r\n\r\nconst removeUser = (array, out) => {\r\n  localStorage.removeItem(array);\r\n  setData(array);\r\n  getData(array, out);\r\n};\r\n\r\nconst createTask = function() {\r\n  if(isValid(newTaskTitle) && isValid(newTaskAuthor)){\r\n    let taskDate = toFullDate(day, month, year);\r\n    let newTask = new Task(newTaskTitle.value, newTaskDesc.value, newTaskAuthor.value, 'to do', taskDate);\r\n    toDo.push(newTask);\r\n    setData(toDo);\r\n    getData(toDo, cardContentToDo);\r\n    // outToDo();\r\n    countTotal(toDo, toDo);\r\n    clearPopUp();\r\n    \r\n    let moveOnBtns = cardContentToDo.querySelectorAll('.task-btn-move-on'); \r\n    let deleteTaskBtns = cardContentToDo.querySelectorAll('.task-btn-delete'); \r\n    deleteTaskBtns.forEach((item) => {\r\n      item.addEventListener('click', deleteTaskToDo);\r\n    });\r\n    moveOnBtns.forEach((item) => {\r\n      item.addEventListener('click', moveOnTaskToDo);\r\n    });\r\n  } \r\n  \r\n}\r\n\r\nfunction deleteTaskToDo(e){\r\n  let thisTask = e.currentTarget.closest('div[data-status]');\r\n  toDo.splice(thisTask, 1);\r\n  removeUser(toDo, cardContentToDo);\r\n  // thisTask.remove();\r\n  let taskDivsToDo = cardContentToDo.querySelectorAll('.task');\r\n  let deleteTaskBtns = cardContentToDo.querySelectorAll('.task-btn-delete'); \r\n  let moveOnBtns = cardContentToDo.querySelectorAll('.task-btn-move-on'); \r\n  update(taskDivsToDo);\r\n  update(deleteTaskBtns);\r\n  update(moveOnBtns);\r\n  countTotal('toDo', toDo);\r\n}\r\nfunction moveOnTaskToDo(e){\r\n  let thisTask = e.currentTarget.closest('div[data-status]');\r\n  let id = thisTask.id;\r\n  inProgress.push(toDo[id]);\r\n  setData(inProgress);\r\n \r\n  toDo.splice(id, 1);\r\n  removeUser(toDo, cardContentToDo);\r\n  // thisTask.remove();\r\n  let taskDivsToDo = cardContentToDo.querySelectorAll('.task');\r\n  let deleteTaskBtns = cardContentToDo.querySelectorAll('.task-btn-delete'); \r\n  let moveOnBtns = cardContentToDo.querySelectorAll('.task-btn-move-on'); \r\n  update(taskDivsToDo);\r\n  update(deleteTaskBtns);\r\n  update(moveOnBtns);\r\n  inProgress.forEach((item) => {\r\n    item.status = 'in progress';\r\n  });\r\n  // outInProgress();\r\n  getData(inProgress, cardContentIn);\r\n  let taskDivsInProgress = cardContentIn.querySelectorAll('.task');\r\n  taskDivsInProgress.forEach((item) => {\r\n    item.dataset.status = 'inProgress';\r\n  });\r\n  update(taskDivsInProgress);  \r\n  countTotal('toDo', toDo);\r\n  countTotal('inProgress', inProgress);\r\n\r\n  let moveOnBtnsIn = cardContentIn.querySelectorAll('.task-btn-move-on');\r\n  moveOnBtnsIn.forEach((item) => {\r\n    item.addEventListener('click', moveOnTaskIn);\r\n  });\r\n  let deleteTasksBtnsIn = cardContentIn.querySelectorAll('.task-btn-delete');\r\n  deleteTasksBtnsIn.forEach((item) => {\r\n    item.addEventListener('click', deleteTaskIn);\r\n  });\r\n}\r\nfunction deleteTaskIn(e){\r\n  let thisTask = e.currentTarget.closest('div[data-status]');\r\n  inProgress.splice(thisTask, 1);\r\n  thisTask.remove();\r\n  let taskDivsIn = cardContentIn.querySelectorAll('.task');\r\n  let deleteTaskBtns = cardContentIn.querySelectorAll('.task-btn-delete'); \r\n  let moveOnBtns = cardContentIn.querySelectorAll('.task-btn-move-on'); \r\n\r\n  update(taskDivsIn);\r\n  update(deleteTaskBtns);\r\n  update(moveOnBtns);\r\n  countTotal('toDo', toDo);\r\n  countTotal('inProgress', inProgress);\r\n}\r\nfunction deleteTaskDone(e){\r\n  let thisTask = e.currentTarget.closest('div[data-status]');\r\n  done.splice(thisTask, 1);\r\n  thisTask.remove();\r\n  let taskDivsDone = cardContentDone.querySelectorAll('.task');\r\n  let deleteTaskBtns = cardContentDone.querySelectorAll('.task-btn-delete'); \r\n  let moveOnBtns = cardContentDone.querySelectorAll('.task-btn-move-on'); \r\n  update(taskDivsDone);\r\n  update(deleteTaskBtns);\r\n  update(moveOnBtns);\r\n  countTotal('toDo', toDo);\r\n  countTotal('inProgress', inProgress);\r\n  countTotal('done', done);\r\n}\r\n\r\n\r\n\r\nfunction moveOnTaskIn(e){\r\n  let thisTask = e.currentTarget.closest('div[data-status]');\r\n  let id = thisTask.id;\r\n  done.push(inProgress[id]);\r\n  inProgress.splice(id, 1);\r\n  thisTask.remove();\r\n  let taskDivsInProgress = cardContentIn.querySelectorAll('.task');\r\n  let deleteTaskBtns = document.querySelectorAll('.task-btn-delete'); \r\n  let moveOnBtns = document.querySelectorAll('.task-btn-move-on'); \r\n  update(taskDivsInProgress);\r\n  update(deleteTaskBtns);\r\n  update(moveOnBtns);\r\n  done.forEach((item) => {\r\n    item.status = 'done';\r\n  });\r\n  outDone();\r\n  let taskDivsDone = cardContentDone.querySelectorAll('.task');\r\n  taskDivsDone.forEach((item) => {\r\n    item.dataset.status = 'done';\r\n    let moveOnBtn = item.querySelector('.task-btn-move-on');\r\n    moveOnBtn.remove();\r\n  });\r\n  update(taskDivsDone);\r\n  countTotal('toDo', toDo);\r\n  countTotal('inProgress', inProgress);\r\n  countTotal('done', done);\r\n    \r\n  let deleteTasksBtnsDone = cardContentDone.querySelectorAll('.task-btn-delete');\r\n  deleteTasksBtnsDone.forEach((item) => {\r\n    item.addEventListener('click', deleteTaskDone);\r\n  });\r\n}\r\n  \r\n\r\nfunction update(elem) {\r\n  elem.forEach((item,idx) => {\r\n    item.setAttribute('id', idx);\r\n  });\r\n}\r\n\r\ntaskBtnAdd.addEventListener('click', () => newTaskWrap.classList.add('active'));\r\n\r\ncardCloseBtn.addEventListener('click', function(){\r\n  newTaskWrap.classList.toggle('active');\r\n});\r\n\r\ncancelBtn.addEventListener('click', clearPopUp);\r\nconst taskBtnNew = document.querySelector('.task-btn-new');\r\ntaskBtnNew.addEventListener('click', createTask);\r\n\r\nfunction deleteTasks(arr, divs){\r\n  arr.splice(0, arr.length);\r\n  let taskDivs = divs.querySelectorAll('.task');\r\n  taskDivs.forEach((item) =>item.remove());\r\n  countTotal('toDo', toDo);\r\n  countTotal('inProgress', inProgress);\r\n  countTotal('done', done);\r\n}\r\n\r\ndeleteAllBtn.forEach((item) => {\r\n  item.addEventListener('click', (e) => {\r\n    if(e.currentTarget.dataset.status == 'toDo'){\r\n      deleteTasks(toDo, cardContentToDo);\r\n    }else if(e.currentTarget.dataset.status == 'inProgress'){\r\n      deleteTasks(inProgress, cardContentIn);\r\n    } else if(e.currentTarget.dataset.status == 'done'){\r\n      deleteTasks(done, cardContentDone);\r\n    }\r\n  });\r\n});\r\n\r\n"],"names":[],"version":3,"file":"index.de5c0784.js.map","sourceRoot":"/__parcel_source_root/"}